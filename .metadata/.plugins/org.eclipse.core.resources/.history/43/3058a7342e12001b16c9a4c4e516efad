/*
 * ISR.c
 *
 *  Created on: Oct 19, 2020
 *      Author: ZAMALA
 */

#include <avr/io.h>

 unsigned char digits[6] = {0};

ISR(INT0_vect)
{
	int i = 0;
	for(; i< 6 ;i++)
	{
		digits[i] = 0 ;
	}
}

ISR(INT1_vect)
{
	//stop clk
	TCCR1B = 0;
	CLEAR_BIT(TCCR1A, FOC1A);
}

ISR(INT2_vect)
{
	TCCR1A = (1 << FOC1A) ;
	TCCR1B = (1<<CS10) |(1<<CS12)|(1<<WGM12) ; //CLK/1024

}


ISR(TIMER1_COMPA_vect)
{
	digits[0]++;
	if(digits[0] == 10)
	{
		digits[0] = 0 ;
		digits[1]++;
	}
	if(digits[1] == 6)
	{
		digits[1] =0 ;
		digits[2]++;
	}
	if(digits[2] == 10)
	{
		digits[2] = 0 ;
		digits[3]++;
	}
	if(digits[3] == 6)
	{
		digits[3] =0 ;
		digits[4]++;
	}
	if(digits[4] == 10)
	{
		digits[4] =0 ;
		digits[5]++;
	}
	if(digits[5] == 6)
	{
		digits[5] =0 ;
	}
}
